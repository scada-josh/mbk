var classActionAddEventFormWizard = new function() {

    this.addEventFormWizardParam = {
                                    "eventNameParam": "",
                                    "locationNameParam": "",
                                    "eventBeginDateParam": "",
                                    "eventEndDateParam": "",
                                    "listAttendeeParam": []
                                  };

    this.countAttendee;

    /* initialAddEventFormWizardParam manager */
    this.initialAddEventFormWizardParam = function () {
      //console.log(this.addEventFormWizardParam);
      this.countAttendee = 0;
    }                              

    /* eventNameParam manager */
    this.eventNameParam = function (txtName) {
      this.addEventFormWizardParam.eventNameParam = txtName;
      //console.log(this.addEventFormWizardParam);
    }

    /* locationNameParam manager */
    this.locationNameParam = function (txtLocation) {
      this.addEventFormWizardParam.locationNameParam = txtLocation;
      //console.log(this.addEventFormWizardParam);
    }

    /* eventBeginDateParam manager */
    this.eventBeginDateParam = function (myEventBeginDateParam) {
      this.addEventFormWizardParam.eventBeginDateParam = myEventBeginDateParam;
      //console.log(this.addEventFormWizardParam);
    }

    /* eventEndDateParam manager */
    this.eventEndDateParam = function (myEventEndDateParam) {
      this.addEventFormWizardParam.eventEndDateParam = myEventEndDateParam;
      //console.log(this.addEventFormWizardParam);
    }


    /* listAttendeeParam manager */
    this.addNewAttendee = function (record) {
        //console.log('addNewAttendee');
        //console.log(record);
        this.addEventFormWizardParam.listAttendeeParam.push(record);
        //console.log(this.addEventFormWizardParam);

        this.countAttendee++;
    };

    this.removeAttendeeByID = function (recordID) {
        //console.log('removeAttendeeByID : ' + recordID);
        
        arrayJsonObj = this.addEventFormWizardParam.listAttendeeParam;

        $.each(arrayJsonObj, function(i, item) {
          //console.log(i);
          //console.log(item);

            $.each(this, function(name, value) {
                /// do stuff
                //console.log(name + '=' + value);
                if (value == recordID){
                  arrayJsonObj.splice(i, 1);
                }
            });

        });

        this.countAttendee--;

    };

    this.modifiedAttendeeByID = function () {
        //console.log('modifiedAttendeeByID');
        //return this.color + ' ' + this.type + ' apple';
    };

    this.selectAllAttendee = function () {


        // var tmpCountAttendee = $('#AddEventFormWizardAttendeeDataTable tbody input[type="checkbox"]:checked').length;

        var tmpAttendeeChecked = $('#AddEventFormWizardAttendeeDataTable tbody input[type="checkbox"]:checked');

        $.each(tmpAttendeeChecked, function(i, item) {
            //console.log(i + " : " + item);
        });

        // for (var i = 0; i < tmpAttendeeChecked.length; i++) {
        //   console.log();
        // };

        //this.addEventFormWizardParam.listAttendeeParam.push(record);
        //console.log(this.addEventFormWizardParam);
    };

    this.submitAddEventFormWizard = function () {
        //console.log('submitAddEventFormWizard');
        //console.log(this.addEventFormWizardParam);

        $.ajax({
          url: '../../../../api/eventManager/addEvent/',
          type: 'POST',
          contentType: 'application/json',
          dataType: 'json',
          data: JSON.stringify(this.addEventFormWizardParam),
          cache: false,
          //async: false,
          success: function(data) {
              console.log(data);
              //alert('Finished!');
              fnResetFormWizard();
              EventsManagerDataTable.ajax.reload();
              //EventsManagerDataTable.fnReloadAjax();
              jqueryRouteProvider('default');
            },
            error: function(jqXHR, textStatus, errorThrown){
              alert('init error: ' + textStatus);
            }
          });



        
    };
}



  