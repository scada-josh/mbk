//------------------------ EventsManager Data Table -----------------------//
if (jQuery().dataTable) {


    var EventsManagerDataTable = $('#EventsManagerDataTable').DataTable( {
         "processing": true,
        // "serverSide": true,
        //scrollY: '40vh',
        //scrollCollapse: true,
        "ajax": {
            "url": "../../../../api/eventManager/listEvent/",
            "type": "POST",
            //"dataType": "json",
            // "data"   : function( d ) {
            //   d.agendaID = "agenda-0001-0001";
            // },
            "dataSrc": "rows",
            // "success": function(data) {
            //     console.log(data);
            // },
            // "error": function(jqXHR, textStatus, errorThrown){
            //     alert('init error: ' + textStatus);
            // }
        },
        // "columns": [
        //     { "data": "id"},
        //     { "data": "event_id"}
        // ],
        // กำหนดการแสดงผล Drop down เมนู
        "aLengthMenu": [
                [5, 10, 15, 25, 50, 100, -1],
                [5, 10, 15, 25, 50, 100, "All"]
            ],
        "iDisplayLength": 5,
        // กำหนดการแสดงผลบน label
        "oLanguage": {
                "sLengthMenu": "_MENU_ Records per page",
                "sInfo": "_START_ - _END_ of _TOTAL_",
                "sInfoEmpty": "0 - 0 of 0",
                "oPaginate": {
                    "sPrevious": "Prev",
                    "sNext": "Next"
                }
        },
            // "aoColumnDefs": [{
            //     'bSortable': false,
            //     'aTargets': [0]
            // }]
        // "aoColumns" : [
        //     { 
        //         'sWidth': 'null'
        //     }, // 1st column width 
        //     { "sWidth": "null" }, // 2nd column width 
        //     { "sWidth": "null" }, // 3rd column width
        //     { "sWidth": "null" } // 4th column width 
        // ],  
        // กำหนดคอลัมภ์ให้สามารถ sort ได้หรือไม่
        "aoColumnDefs": [
                // {
                //     'sWidth': '14px', 
                //     'orderable' : false,
                //     'bAutoWidth': false, 
                //     'bSortable' : false, 
                //     'aTargets' : [0]
                // },
                {
                    'bSortable': true,
                    "bAutoWidth": true,
                    'aTargets': [0]
                },
                // {
                //     'sWidth': '80px', 
                //     'bSortable': true,
                //      "bAutoWidth": false,
                //     'aTargets': [2]
                // },
                {
                    'sWidth': '130px', 
                    'bSortable': false,
                    "bAutoWidth": false,
                    'aTargets': [1]
                },{
                    // The `data` parameter refers to the data for the cell (defined by the
                    // `data` option, which defaults to the column being worked with, in
                    // this case `data: 0`.
                    "render": function ( data, type, row ) {
                        //console.log(data);
                        //console.log(type);
                        //console.log(row);
                        //console.log(row.user_name);
                     

                        var tmpListEvents = "";
                        tmpListEvents = '<div class="mail-msg-header">';
                        tmpListEvents += '<div class="msg-sender-recver">';
                        tmpListEvents += '<strong style="color: #428bca">' + row.event_name_th + '</strong><br/>';
                        tmpListEvents += '<i>' + row.event_location + '</i><br/>';
                        tmpListEvents += '<i class="fa fa-clock-o blue"> &nbsp;</i><i>' + row.event_begin_date + '</i> &nbsp;';
                        tmpListEvents += '<i class="fa fa-user blue"> &nbsp;</i><i>7/20</i>';
                        tmpListEvents += '</div>';
                        tmpListEvents += '</div>';

                        return tmpListEvents;
                    },
                    "targets": 0
                },{
                    // The `data` parameter refers to the data for the cell (defined by the
                    // `data` option, which defaults to the column being worked with, in
                    // this case `data: 0`.
                    "render": function ( data, type, row ) {
                        //console.log(data);
                        //console.log(type);
                        //console.log(row);
                        //console.log(row.user_name);

                        var tmpListEventControls = "";

                        //tmpListEventControls = '<td class="text-center " style="vertical-align:middle">';
                        tmpListEventControls += '<div class="btn-group">';
                        tmpListEventControls += '<a class="btn btn-sm show-tooltip" title="" href="#" data-original-title="View"><i class="fa fa-search-plus"></i></a>';
                        tmpListEventControls += '<a class="btn btn-sm show-tooltip" title="" href="javascript:;" data-original-title="Edit"><i class="fa fa-edit"></i></a>';
                        tmpListEventControls += '<a class="btn btn-sm btn-danger show-tooltip" title="" href="#" data-original-title="Delete"><i class="fa fa-trash-o"></i></a>';
                        tmpListEventControls += '</div>';
                        //tmpListEventControls += '</td>';

                        return tmpListEventControls;
                    },
                    "targets": 1
                },{ 
                    "sClass": "EventsManagerDataTable_Controls", "aTargets": [1] 
                }
        ],
        "order" : [] //disable default sorting, eg sorting on 1st column
        
    });


    $('#EventsManagerDataTable tbody').on('click', 'tr', function (e) {
        //console.log(this);
        //var row = $(this).closest("tr").get(0);
        //console.log($(this));

        // $(this).closest('tr').get(0).find('a > .goto-add').on('click', function(){
        //  console.log("Hello");
        // })

        // var data = EventsManagerDataTable.row(this).data();
        // console.log(data);
        // console.log( 'You clicked on '+data.id+'\'s row' );




        // Prevent click event from propagating to parent
        e.stopPropagation();

    } );

    $('#EventsManagerDataTable tbody').on('click', 'tr a', function () {
        //console.log($(this).attr('data-original-title'));
        //console.log(this);
        // console.log ( 'Row index: ' + EventsManagerDataTable.row(this).index() );

        var data = EventsManagerDataTable.row($(this).closest('tr')).data();
        console.log(data);
        console.log( 'You clicked on '+data.id+'\'s row' );
        

        if ($(this).attr('data-original-title') == 'View') {
            //console.log('View');
            jqueryRouteProvider('viewEvent');
        } else if ($(this).attr('data-original-title') == 'Edit') {
            //console.log('Edit');
            jqueryRouteProvider('editEvent');
        } else if ($(this).attr('data-original-title') == 'Delete') {
            console.log('Delete');
        }

    });


}


