//------------------------ Attendee Data Table -----------------------//
if (jQuery().dataTable) {


    var AddEventFormWizardAttendeeDataTable = $('#AddEventFormWizardAttendeeDataTable').DataTable( {
	    	"processing": true,
	    	// "scrollY": '40vh',
      //   	"scrollCollapse": true,
      //   	"paging": false,
	        "ajax": {
	        	"url": "../../../../api/eventManager/listUser/",
	        	"type": "GET",
	            "dataSrc": "rows",
	            // "success": function(data) {
	            //     console.log(data);
	            // },
	            // "error": function(jqXHR, textStatus, errorThrown){
	            //     alert('init error: ' + textStatus);
	            // }
	        },
	        // กำหนดการแสดงผล Drop down เมนู
	        "aLengthMenu": [
	                [5, 10, 15, 25, 50, 100, -1],
	                [5, 10, 15, 25, 50, 100, "All"]
	            ],
	        "iDisplayLength": 5,
	        // กำหนดการแสดงผลบน label
	        "oLanguage": {
	                "sLengthMenu": "_MENU_ Records per page",
	                "sInfo": "_START_ - _END_ of _TOTAL_",
	                "sInfoEmpty": "0 - 0 of 0",
	                "oPaginate": {
	                    "sPrevious": "Prev",
	                    "sNext": "Next"
	                }
	        },
	        // กำหนดคอลัมภ์ให้สามารถ sort ได้หรือไม่
	        "aoColumnDefs": [
	                {
	                	'sWidth': '50px', 
	                    'bSortable': false,
	                    "bAutoWidth": true,
	                    'aTargets': [0]
	                },
	                {
	                    'sWidth': '80px', 
	                    'bSortable': true,
	                    "bAutoWidth": false,
	                    'aTargets': [1]
	                },
	                {
	                    // The `data` parameter refers to the data for the cell (defined by the
	                    // `data` option, which defaults to the column being worked with, in
	                    // this case `data: 0`.
	                    "render": function ( data, type, row ) {
	                        //return '<input type="checkbox" />';
	                        return '<input type="checkbox" class="case" name="case" value="' + row.id + '"/>';
	                    },
	                    "targets": 0
	                },
	                {
	                    // The `data` parameter refers to the data for the cell (defined by the
	                    // `data` option, which defaults to the column being worked with, in
	                    // this case `data: 0`.
	                    "render": function ( data, type, row ) {
	                        return row.user_id;
	                    },
	                    "targets": 1
	                },
	                {
	                    // The `data` parameter refers to the data for the cell (defined by the
	                    // `data` option, which defaults to the column being worked with, in
	                    // this case `data: 0`.
	                    "render": function ( data, type, row ) {
	                        return row.user_name;
	                    },
	                    "targets": 2
	                },
	                {
	                    // The `data` parameter refers to the data for the cell (defined by the
	                    // `data` option, which defaults to the column being worked with, in
	                    // this case `data: 0`.
	                    "render": function ( data, type, row ) {
	                        return row.user_position;
	                    },
	                    "targets": 3
	                },
	                {
	                    // The `data` parameter refers to the data for the cell (defined by the
	                    // `data` option, which defaults to the column being worked with, in
	                    // this case `data: 0`.
	                    "render": function ( data, type, row ) {
	                        //return row.user_division + '<br/><i>' + row.user_org + '</i>';
	                        return row.user_division;
	                    },
	                    "targets": 4
	                }
	        ],
	        "order" : [[ 1, 'asc' ]] //disable default sorting, eg sorting on 1st column


    });



	// Handle click on checkbox
   $('#AddEventFormWizardAttendeeDataTable tbody').on('click', 'input[type="checkbox"]', function(e){

      var $row = $(this).closest('tr');

      // Get row data
      var data = AddEventFormWizardAttendeeDataTable.row($row).data();


	  if ($(this).is(':checked')) {
	  	classActionAddEventFormWizard.addNewAttendee(data);
	  } else {
	  	classActionAddEventFormWizard.removeAttendeeByID($(this).val());
	  }
      

      // Prevent click event from propagating to parent
      e.stopPropagation();
   });


   $('#AddEventFormWizardAttendeeDataTable thead').on('click', 'input[type="checkbox"]', function(e){

   	if ($(this).is(':checked')) {
   		console.log('select all');
   		classActionAddEventFormWizard.selectAllAttendee();
   		// var oTable = $('#AddEventFormWizardAttendeeDataTable').dataTable();
   		// console.log(oTable.fnGetData());
   	} else {
   		console.log('deselect all');
   	}

   	e.stopPropagation();
   });
	





}


